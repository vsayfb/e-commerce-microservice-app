services:
  api_gateway:
    container_name: api_gateway
    image: kong
    volumes:
      - ./gateway:/app
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_DECLARATIVE_CONFIG=/app/kong.yml
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    command: kong start

  zookeeper:
    container_name: zookeeper
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: "bitnami/kafka:latest"
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  customer_service:
    container_name: customer
    build: ./customer
    volumes:
      - ./customer:/app
    ports:
      - 81:81
    depends_on:
      - kafka
      - api_gateway

  product_service:
    container_name: product
    build: ./product
    volumes:
      - ./product:/app
    ports:
      - 82:82
    environment:
      - platform=linux/amd64
    depends_on:
      - kafka
      - api_gateway

  basket_service:
    container_name: basket
    build: ./basket
    volumes:
      - ./basket:/app
    ports:
      - 83:83
    depends_on:
      - kafka
      - api_gateway
